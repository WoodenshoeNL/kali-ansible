
- name: gmsadumper - create project directory for "{{ login_user }}" user
  file:
    path: "{{ login_home }}/gmsadumper"
    state: directory
    owner: "{{ login_user }}"
    group: "{{ login_user }}"
    mode: "0755"

- name: gMSADumper – clone upstream repository
  ansible.builtin.git:
    repo: https://github.com/micahvandeusen/gMSADumper.git
    dest: "{{ login_home }}/gmsadumper"
    version: "HEAD"
    update: yes
    force: yes
  become_user: "{{ login_user }}"

- name: gmsadumper - create Python virtualenv (runs as "{{ login_user }}")
  command: python3 -m venv "{{ login_home }}"/gmsadumper/venv
  args:
    creates: "{{ login_home }}/gmsadumper/venv/bin/activate"
  become: yes
  become_user: "{{ login_user }}"

#- name: gmsadumper - install gmsadumper inside the virtualenv (runs as "{{ login_user }}")
#  pip:
#    name: gmsadumper
#    virtualenv: {{ login_home }}/gmsadumper/venv
#    virtualenv_python: python3
#    state: latest              # change to “present” if you prefer pinning
#  become: yes
#  become_user: "{{ login_user }}"

- name: gMSADumper – install Python requirements into venv
  ansible.builtin.pip:
    requirements: "{{ login_home }}/gmsadumper/requirements.txt"
    virtualenv: "{{ login_home }}/gmsadumper/venv"
    virtualenv_command: /usr/bin/python3 -m venv
  become_user: "{{ login_user }}"

#- name: gmsadumper - create global wrapper in /usr/local/bin
#  file:
#    src: {{ login_home }}/gmsadumper/venv/bin/gmsadumper
#    dest: /usr/local/bin/gmsadumper
#    state: link
#    force: yes 

- name: gMSADumper – create wrapper script in /usr/local/bin
  ansible.builtin.copy:
    dest: /usr/local/bin/gMSADumper
    mode: "0755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      exec "{{ login_home }}"/gmsadumper/venv/bin/python "{{ login_home }}"/gmsadumper/gMSADumper.py "$@"
